{"ast":null,"code":"var _jsxFileName = \"/Users/amaurygimonnet/Documents/GitHub/SiteElectFront/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Login extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      /*\n          Because we named the inputs to match their\n          corresponding values in state, it's\n          super easy to update the state\n      */\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.Login_fct = () => {\n      console.log('this.state');\n    };\n\n    this.state = {\n      fname: '',\n      lname: '',\n      email: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          onChange: e => {\n            this.setState({\n              email: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"password\",\n          onChange: e => {\n            this.setState({\n              password: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.Login_fct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/amaurygimonnet/Documents/GitHub/SiteElectFront/src/components/Login.js"],"names":["React","Component","axios","Login","constructor","onChange","e","setState","target","name","value","Login_fct","console","log","state","fname","lname","email","render","password"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AACzCG,EAAAA,WAAW,GAAG;AACV;;AADU,SASdC,QATc,GASFC,CAAD,IAAO;AAClB;AACJ;AACA;AACA;AACA;AACI,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,OAAd;AACC,KAhBa;;AAAA,SAkBdC,SAlBc,GAkBF,MAAM;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,KApBa;;AAEV,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAcHC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BAEI;AAAA,0CAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAgC,UAAA,QAAQ,EAAGZ,CAAD,IAAK;AAAC,iBAAKC,QAAL,CAAc;AAACU,cAAAA,KAAK,EAACX,CAAC,CAACE,MAAF,CAASE;AAAhB,aAAd;AAAsC;AAAtF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAA,8CAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,UAAxB;AAAmC,UAAA,QAAQ,EAAGJ,CAAD,IAAK;AAAC,iBAAKC,QAAL,CAAc;AAACY,cAAAA,QAAQ,EAACb,CAAC,CAACE,MAAF,CAASE;AAAnB,aAAd;AAAyC;AAA5F;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAUI;AAAQ,QAAA,OAAO,EAAE,MAAI,KAAKC;AAA1B;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAtCwC","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\nexport default class Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n          fname: '',\n          lname: '',\n          email: '',\n        };\n      }\n\n    onChange = (e) => {\n    /*\n        Because we named the inputs to match their\n        corresponding values in state, it's\n        super easy to update the state\n    */\n    this.setState({ [e.target.name]: e.target.value });\n    }\n\n    Login_fct = () => {\n        console.log('this.state');\n    }\n    render() {\n        return (\n            <div>\n                \n                <label>\n                    Name :\n                    <input type=\"text\" name=\"email\" onChange={(e)=>{this.setState({email:e.target.value})}} />\n                </label>\n                <label>\n                    Password :\n                    <input type=\"text\" name=\"password\" onChange={(e)=>{this.setState({password:e.target.value})}} />\n                </label>\n                <button onClick={()=>this.Login_fct}></button>\n                \n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}